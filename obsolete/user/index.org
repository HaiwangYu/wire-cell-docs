* User Manual

There are a number of ways to use Wire Cell in a non-programmatic way.  
Wire Cell provides a few built-in ways to directly make use of its functionality.  
You may also use Wire Cell as part of some larger system or framework (see their own documentation for details).  
This manual documents how to use the user interfaces provided directly by Wire Cell software.

** Using Bee

t.b.d.

** Command line application

Wire Cell provides a single, general-purpose command line interface (CLI) program called =wire-cell=.  

#+BEGIN_EXAMPLE
  $ wire-cell [options] [arguments]
  $ wire-cell --help
  Options:
    --help                 wire-cell [options] [argments]
    -c [ --config ] arg    set configuration file
    -p [ --plugin ] arg    specify a plugin
    -C [ --component ] arg specify a component
    --dump-config arg      dump configuration to file
#+END_EXAMPLE

By default, this command does very little but rather is heavily configurable.
The bulk of the configuration is given in a configuration file.


*** Components 

Wire Cell component objects (or components) are concrete instances of interface classes.  
They are located by their concrete class name and an optional instance name.
The =wire-cell= CLI will assemble an overall job by aggregating and connecting components.

*** Plugins

The =wire-cell= CLI can look for components inside special shared libraries call "plugins".  
A set of plugins can be specified on the command line.

*** Component Configuration

Every Wire Cell component is created in some default state as determined in the source code.  
Some components may then accept configuration parameters.  
The configuration may be provided or dumped through the  =wire-cell= command line.
See the document on [[./config.org][configuration]] for more informatin.
